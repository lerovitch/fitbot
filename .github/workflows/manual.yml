# This is a basic workflow that is manually triggered

name: Manual workflow



# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Build docker image
      run: make docker/build
    - name: Install tzdata
      run: sudo apt-get update && DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends tzdata
    - name: Sleep until specific time
      run: |
          target_hour=0
          target_minute=00
          target_second=0
          current_hour=$(TZ="Europe/Madrid" date +%H)
          current_minute=$(date +%M)
          current_second=$(date +%S)
          # Remove leading zeros
          current_hour=$((10#$current_hour))
          current_minute=$((10#$current_minute))
          current_second=$((10#$current_second))
          
          target_time_in_seconds=$((target_hour * 3600 + target_minute * 60 + target_second))
          current_time_in_seconds=$((current_hour * 3600 + current_minute * 60 + current_second))
          echo "current_hour: $current_hour $current_minute $current_second"
          echo "target_time_in_seconds: $target_time_in_seconds"
          echo "current_time_in_seconds: $current_time_in_seconds"
          
          if [ $current_time_in_seconds -ge $target_time_in_seconds ]; then
            sleep_duration=$((86400 + target_time_in_seconds - current_time_in_seconds))
          else
            sleep_duration=$((target_time_in_seconds - current_time_in_seconds))
          fi
          echo "Sleeping for $sleep_duration seconds until the target time"
          #sleep $sleep_duration
    - name: Run fitbot
      run: docker run -e email=${{ secrets.EMAIL }} -e password=${{ secrets.PASSWORD }} -e booking-goals='{\"0\":{\"time\":\"0700\",\"name\":\"CrossFit\"},\"1\":{\"time\":\"0700\",\"name\":\"CrossFit\"},\"2\":{\"time\":\"1330\",\"name\":\"CrossFit\"},\"3\":{\"time\":\"0700\",\"name\":\"Gymnastics\"},\"4\":{\"time\":\"0700\",\"name\":\"CrossFit\"}}' -e box-name=wezonepacifico -e box-id=9851 -e days-in-advance=2 fitbot

